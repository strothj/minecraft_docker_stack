- name: Filter hosts by gateway instance label
  hosts: all
  gather_facts: false
  run_once: true
  vars:
    instance_label: '{{ lookup("ansible.builtin.file", "/run/secrets/gateway_instance_label") }}'
  tasks:
    - name: Add hosts to group matching gateway instance label
      ansible.builtin.add_host:
        name: '{{ item }}'
        groups: gateways
      loop: '{{ ansible_play_hosts }}'
      when: item == instance_label

- name: Apply general configurations
  hosts: gateways
  vars:
    hostname: '{{ lookup("ansible.builtin.file", "/run/secrets/gateway_hostname") }}'
    timezone: '{{ lookup("ansible.builtin.file", "/run/secrets/timezone") }}'
  tasks:
    - name: Print IP address
      debug:
        var: ansible_host

    - name: Set timezone
      community.general.timezone:
        name: '{{ timezone }}'
      notify: Restart CRON

    - name: Set hostname
      ansible.builtin.hostname:
        name: '{{ hostname }}'

    - name: Set global alias ll for all users
      ansible.builtin.lineinfile:
        path: /etc/bash.bashrc
        line: "alias ll='ls -l'"
  handlers:
    - name: Restart CRON
      ansible.builtin.systemd:
        name: cron
        state: restarted

- name: Install Docker
  hosts: gateways
  tasks:
    - name: Add Docker GPG key
      ansible.builtin.get_url:
        dest: /etc/apt/keyrings/docker.asc
        group: root
        mode: "0444"
        owner: root
        url: https://download.docker.com/linux/debian/gpg

    - name: Configure Docker apt repository
      ansible.builtin.apt_repository:
        filename: docker.list
        repo: >-
          deb
          [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc]
          https://download.docker.com/linux/debian bookworm stable

    - name: Install Docker packages
      ansible.builtin.apt:
        cache_valid_time: 3_600 # 60 minutes.
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin

# Configure the logging driver and enable automatic log rotations so the Docker
# host doesn't exhaust its storage space.
# https://docs.docker.com/engine/install/linux-postinstall/#configure-default-logging-driver
# https://docs.docker.com/engine/logging/drivers/json-file/
- name: Configure Docker logger
  hosts: gateways
  tasks:
    - name: Retrieve contents of existing daemon.json
      ansible.builtin.slurp:
        src: /etc/docker/daemon.json
      register: daemon_json_b64
      ignore_errors: true

    - name: Parse existing daemon.json
      ansible.builtin.set_fact:
        daemon_json: >
          {{
            daemon_json_b64.content |
            ansible.builtin.b64decode |
            ansible.builtin.from_json
          }}
      when: daemon_json_b64 is succeeded

    - name: Use empty daemon.json
      ansible.builtin.set_fact:
        daemon_json: >
          {{
            '{}' |
            ansible.builtin.from_json
          }}
      when: daemon_json_b64 is failed

    - name: Set log driver to json-file and enable automatic log-rotation
      ansible.builtin.set_fact:
        daemon_json: >
          {{
            daemon_json |
            ansible.builtin.combine({
              'log-driver': 'json-file',
              'log-opts': {
                'max-size': '10m',
                'max-file': '3'
              }
            })
          }}

    - name: Write daemon.json
      ansible.builtin.copy:
        content: "{{ daemon_json | to_nice_json }}"
        dest: /etc/docker/daemon.json
        group: root
        mode: "0600"
        owner: root
      notify: Restart Docker
  handlers:
    - name: Restart Docker
      ansible.builtin.systemd:
        name: docker
        state: restarted
